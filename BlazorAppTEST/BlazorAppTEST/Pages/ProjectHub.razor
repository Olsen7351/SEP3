@page "/project-hub/{ProjectIdAsString}"
@using ClassLibrary_SEP3
@using BlazorAppTEST.Services
@using MongoDB.Bson
@using ProjectMicroservice.Models
@using Xunit.Sdk
@using Task = System.Threading.Tasks.Task
@inject BacklogService BacklogService
@inject ProjectService ProjectService
@inject NavigationManager NavManager

<div class="container-fluid">
    <div class="container">
        <h2>Project Hub for Project ID: @ProjectIdAsString</h2>
        <div class="card backlog-section">
                <p>Backlog</p>
            <ul class="task-list">
                @if (Backlog != null)
                {

                
                @foreach (var task in Backlog.BacklogTasks)
                {
                    <li class="task-item">
                        <span>@task</span>
                        <button class="btn-delete-task" @onclick="() => DeleteTask(task.Id)">x</button>
                    </li>
                }
                }
            </ul>
                
                <button class="button" @onclick="AddTask">Add Task</button>
        </div>
    </div>
</div>


@code
{
    [Parameter]
    public string ProjectIdAsString { get; set; }

    public Project? Project { get; set; }

    public Backlog? Backlog { get; set; }



    protected override async Task OnParametersSetAsync()
    {
        Project ProjectInput = await ProjectService.GetProject(ProjectIdAsString);
        Project = ProjectInput ?? throw new Exception("Project not found");
        Backlog = Project.Backlog;
    }


    //Redirect to another page
    private void AddTask()
    {
        
    }


    //DeleteTask
    private async Task DeleteTask()
    {
        //TODO
    }
    // Delete task method
    private async Task DeleteTask(ObjectId taskId)
    {
        string Id = taskId.ToString();
    //TODO
    }
}