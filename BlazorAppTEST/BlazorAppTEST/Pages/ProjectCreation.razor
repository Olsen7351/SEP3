@page "/projectcreation"
@inject ProjectService Project_Service
@using Task = System.Threading.Tasks.Task
@using BlazorAppTEST.Services
@using ProjectMicroservice.DataTransferObjects

<div class="container">
    <div class="card">
        <!-- Project Creation Form -->
        <h3>Project Creation</h3>
        <EditForm Model="newProject" OnValidSubmit="CreateProject">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="name">Project Name:</label>
                <InputText id="name" class="form-control" @bind-Value="newProject.Name"/>
                <ValidationMessage For="@(() => newProject.Name)" />
            </div>

            <div class="form-group">
                <label for="description">Description:</label>
                <InputTextArea id="description" class="form-control" @bind-Value="newProject.Description"></InputTextArea>
            </div>

            <div class="form-group">
                <label for="startDate">Start Date:</label>
                <InputDate id="startDate" class="form-control" @bind-Value="newProject.StartDate"></InputDate>
                <ValidationMessage For="@(() => newProject.StartDate)" />
            </div>

            <div class="form-group">
                <label for="endDate">End Date:</label>
                <InputDate id="endDate" class="form-control" @bind-Value="newProject.EndDate"></InputDate>
                <ValidationMessage For="@(() => newProject.EndDate)" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

@if (createdProject != null)
{
    <div class="container">
        <div class="card">
            <h3 style="color: lime;">Created Project Successfully!</h3>
            <p><strong>Name:</strong> @createdProject.Name</p>
            <p><strong>Description:</strong> @createdProject.Description</p>
            <p><strong>Start Date:</strong> @createdProject.StartDate.ToShortDateString()</p>
            <p><strong>End Date:</strong> @createdProject.EndDate.ToShortDateString()</p>
        </div>
    </div>
}

@code {
    private CreateProjectRequest newProject = new();
    private CreateProjectRequest createdProject;
    private EditContext editContext;

    protected override void OnInitialized()
    {
        newProject = new CreateProjectRequest
        {
            StartDate = DateTime.Today, 
            EndDate = DateTime.Today    
        };
        editContext = new EditContext(newProject);
    }

    private async Task CreateProject()
    {
        if (!editContext.Validate())  // Check if the form is valid
        {
            return;
        }

        createdProject = newProject; // Display the created project
        await Project_Service.CreateProject(newProject); // Send it through the service
        newProject = new CreateProjectRequest(); // Clear the form
        editContext = new EditContext(newProject); // Reset the EditContext
    }
}
