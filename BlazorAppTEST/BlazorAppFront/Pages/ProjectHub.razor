@page "/project-hub/{ProjectIdAsString}"
@using MainWeb.Services
@using ProjectMicroservice.Models
@using Task = System.Threading.Tasks.Task
@inject ProjectService ProjectService
@inject BacklogService BacklogService
@inject NavigationManager NavManager

<div class="container-fluid">
    <div class="container">
        <h2>Project Hub for Project ID: @ProjectId</h2>
        <div class="card backlog-section">
            @if (HasBacklog)
            {
                <p>Backlog details go here...</p>
                <button class="button" @onclick="AddTask">Add Task</button>
            }
            else
            {
                <button class="button" @onclick="CreateBacklog">Create Backlog</button>
            }
        </div>
    </div>
</div>


@code {

    [Parameter]
    public string ProjectIdAsString { get; set; }

    public int ProjectId { get; private set; }
    bool HasBacklog = false;

    // Initialization
    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(ProjectIdAsString, out var parsedId))
        {
            ProjectId = parsedId;
        }

    // Check if the project has a backlog
        var backlogId = await ProjectService.GetBacklogIDForProject(ProjectId.ToString());
        HasBacklog = !string.IsNullOrEmpty(backlogId);
    }

    // Redirect to another page
    private void AddTask()
    {
        NavManager.NavigateTo("/BacklogCreateTask");
    }

    // Create backlog
    private async Task CreateBacklog()
    {
        var backlog = new
        {
            ProjectID = ProjectId,
        };

        await BacklogService.CreateBacklog(backlog);
    }
}