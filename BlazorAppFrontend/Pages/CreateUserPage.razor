@page "/CreateUserPage"
@using BlazorAppTEST.Services.Auth
@using ClassLibrary_SEP3
@using Task = System.Threading.Tasks.Task
@using BlazorAppTEST.Services
@using ClassLibrary_SEP3.DataTransferObjects
@inject NavigationManager NavigationManager
@inject IUserLogin UserService

<div class="full-page">
    <div class="login-container">
        <h3 style="font-weight: bold">Create User</h3>
        <EditForm Model="@user" OnValidSubmit="CreateUser">
            <DataAnnotationsValidator />
            
            <div class="form-group">
                <label for="username">Username:</label>
                <InputText id="username" class="form-control" @bind-Value="user.Username"/>
                <ValidationMessage For="@(() => user.Username)" />
            </div>

            <div class="form-group">
                <label for="password">Password:</label>
                <InputText id="password" class="form-control" @bind-Value="user.Password" type="password"/>
                <ValidationMessage For="@(() => user.Password)" />
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <InputText id="email" class="form-control" @bind-Value="user.Email" type="email" />
                <ValidationMessage For="@(() => user.Email)" />
            </div>
            <button type="submit" class="btn btn-primary">Create User</button>
        </EditForm>
        
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p style="color: red">@ErrorMessage</p>
        }
    </div>
</div>

@code {
    private CreateUserRequest user = new CreateUserRequest();
    string ErrorMessage { get; set; }

    private async Task CreateUser()
    {
        try
        {
            await UserService.createUser(user);
            ErrorMessage = "User created successfully!";
            user = new CreateUserRequest(); // Reset the form
            NavigationManager.NavigateTo("/LoginPage");
            
        }
        catch (Exception e)
        {
            ErrorMessage = "Failed to create user: " + e.Message;
        }
    }
}